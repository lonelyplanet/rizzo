- results_per_page = properties[:results_per_page] || 5
- href = properties[:path]
- total_pages = (properties[:total_results] / results_per_page.to_f).ceil

- if (properties[:total_results] > results_per_page) || properties[:show_detailed]

  - if properties[:param]
    - href = href.sub(/(#{properties[:param]})\=([0-9]+)(&amp;|&)?/, '') # Remove any existing pagination param
    - href = href.sub(/(&amp;|&)?$/, '') # Remove any trailing ampersands
    - href+= "#{/\?/.match(href) ? '&' : '?'}#{properties[:param]}=%i" # Append new param

  .pagination{ class: properties[:classes] }

    .pagination__forwards.split--right
      - if properties[:current_page] < total_pages
        %a.pagination__link.pagination__link--last{ href: href.gsub(/%i/, total_pages.to_s) }<
          Last
        %a.pagination__link.pagination__link--next.icon--chevron-right--before{ href: href.gsub(/%i/, (properties[:current_page] + 1).to_s)}

    .pagination__backwards.split--left
      - if properties[:current_page] > 1
        %a.pagination__link.pagination__link--prev.icon--chevron-left--before{ href: href.gsub(/%i/, (properties[:current_page] - 1).to_s) }<
        %a.pagination__link.pagination__link--first{ href: href.gsub(/%i/, "1") }<
          First

    - if properties[:total_results] > results_per_page
      .pagination__numbers
        - start = 1
        - finish = total_pages
        - num_visible = properties[:visible_pages] || 5
        - offset = (num_visible / 2.0).ceil # Force a floating point number

        - if total_pages > num_visible
          - if properties[:current_page] >= (total_pages - offset) # [x] [x] [x] [x] [√] [√] [c] [√] [√]
            - start = total_pages - num_visible + 1
          - elsif properties[:current_page] < offset # [√] [√] [c] [√] [√] [x] [x] [x] [x]
            - finish = num_visible
          - else # [x] [√] [√] [c] [√] [√] [x] [x] [x]
            - start = properties[:current_page] - offset + 1
            - finish = properties[:current_page] + offset - 1
        - for num in start..finish
          - if properties[:current_page] != num
            %a.pagination__link{ href: href.gsub(/%i/, num.to_s), data: { current: properties[:current_page], num: num} }<
              = num
          - else
            .pagination__link.pagination__link--current<
              = num
        = single_content_for :pagination_links_rels do
          - if (start..finish).cover?(properties[:current_page]-1)
            %link{rel: 'prev', href: href.gsub(/%i/, (properties[:current_page]-1).to_s)}<
          - if (start..finish).cover?(properties[:current_page]+1)
            %link{rel: 'next', href: href.gsub(/%i/, (properties[:current_page]+1).to_s)}<


    - if properties[:show_detailed] && properties[:total_results] > 0
      .pagination__detailed-info
        - results_from = ((properties[:current_page]-1) * results_per_page).to_i + 1
        - results_to = ((properties[:current_page]) * results_per_page).to_i
        - if results_to > properties[:total_results]
          - results_to = properties[:total_results]

        = "Showing #{results_from}–#{results_to} of #{properties[:total_results]}"
