= render 'styleguide/partials/shared'

.card.styleguide-intro.copy--body.context--content
  .clearfix
    %h1.copy--h1 Lightbox

    %p 
      The lightbox goes hand-in-hand with the
      %a{ href: "/styleguide/js-components/toggle-active" } ToggleActive component
      so as to avoid duplication of functionality. As such, this component only appends the lightbox container and provides an event for updating the lightbox content.
    
    %p
      %a.btn.btn--icon.icon--sight--before.icon--white--before.js-lightbox-toggle.js-toggle-active.sg-lightbox-toggle{ href: "#", data: { toggle_target: ".lightbox" } } Example lightbox

.styleguide-block.styleguide-block__description.card.copy--body

  %h2.copy--h2.styleguide-block__heading
    Initiating

  %pre.styleguide.copy--body.language-markup
    %code
      :escaped
        <a href="#" class="js-lightbox-toggle js-toggle-active" data-toggle-target=".lightbox">show lightbox</a>

  %p
    The
    %code js-lightbox-toggle
    class will set up the lightbox and initiate the
    %a{ href: "/styleguide/js-components/toggle-active" } ToggleActive component.

  %p Note: The component will self instantiate if that class exists on the page, but you can still fire up your own by running:

  %pre.styleguide.copy--body.language-javascript
    %code
      :escaped
        new LightBox({ el: ".js-other-lightbox-selector" });

.styleguide-block.styleguide-block__description.card.copy--body

  %h2.copy--h2.styleguide-block__heading
    Updating the content

  %pre.styleguide.copy--body.language-javascript
    %code
      :escaped
        $("#js-row--content").trigger(":lightbox/updateContent", "HTML content goes here");

  %p Note that this will need to happen where it's being implemented (after an ajax call for example).
