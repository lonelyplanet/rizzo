:ruby
  button_stub = YAML.load(File.read(File.expand_path('../../../data/styleguide/buttons_stubs.yml', __FILE__)))
  buttons = button_stub['buttons']
  variation = button_stub['variation']
  template = File.read(File.expand_path("../../components/_button.html.haml", __FILE__))

.card.styleguide-intro.styleguide-block.copy--body.context--content
  %h1.copy--h1 Buttons
  %p.copy--h2 Please note: 
  %p
    Buttons do not call this component directly as the abstraction would be overkill. Buttons should always look like these through a combination of the modifier classes detailed below and in 
    %a{href: 'https://github.com/lonelyplanet/rizzo/blob/master/app/assets/stylesheets/_common-ui/_buttons.sass'}
      buttons.sass

.styleguide-block.styleguide-block__buttons
  - count = 0
  - buttons.each_with_index do | button, i |
    .styleguide-block__description.card.copy--body
      %h2.copy--h2.styleguide-block__heading
        = button[:styleguide_title]

      .styleguide-block__items.media
        .styleguide-block__item{class: "media__img styleguide-block__item--#{count}"}
          = ui_component("button", button: button)
        %pre.styleguide.copy--body.language-markup.media__body
          %code #{raw(CGI::escapeHTML(Haml::Engine.new(template).render(template, button: button)))}


  -# Chained classes examples

  .styleguide-block__description.card.context--content
    %h2.copy--h2.styleguide-block__heading
      = variation[:styleguide_title]
    %p.copy--body
      These classes are chained to achieve further effects.

    - i = 0
    - modifier_classes = variation.delete(:modifiers)

    - while i < modifier_classes.length
      - variation[:modifiers] = modifier_classes[i]
      .styleguide-block__items
        .styleguide-block__item{class: "styleguide-block__item--#{count}", style: variation[:modifiers] == "btn--full-width" ? "float: none; margin: 20px 0" : ""}
          = ui_component("button", button: variation)
        %pre.styleguide.copy--body.language-markup
          %code #{raw(CGI::escapeHTML(Haml::Engine.new(template).render(template, button: variation)))}
      - i += 1
